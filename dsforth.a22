; https://problemkaputt.de/gbatek-arm-pseudo-instructions-and-directives.htm
; r0-r3: function scratch registers

.nds
.fix
.strict

arm9_dest = 0x02000000
arm7_dest = 0x037F8000 ; shared WRAM mirror (allocated to ARM7 by default)

org 0

.include src\header.a22

arm9_src:
org arm9_dest
arm9_start:

	; Secure area key1
	; This will be filled with 0xE7FFDEFF (undefined opcode)
scratch_area:
	; TODO: also put the input buffer here?
	defs	0x800

.include src\arm9-kernel.a22
.include src\arm9-termout.a22
.include src\arm9-keyboard.a22
.include src\font.a22
.include src\arm9-forth.a22
.include src\dldi.a22

	.align	4
input_buffer:
	.import	src\init.f
init_end:
	.align	4
input_buffer_end:

arm9_end:
org (arm9_end - arm9_start + arm9_src) ; move origin back to ROM space

; move after secure area
.if ($ < 0x8000)
	defs	(0x8000 - $)
.endif

arm7_src:
org arm7_dest
arm7_start:

.include src\arm7-kernel.a22

arm7_end:
org (arm7_end - arm7_start + arm7_src) ; move origin back to ROM space

	.align	0x200
vdisk_offset:

rom_end:
.end
